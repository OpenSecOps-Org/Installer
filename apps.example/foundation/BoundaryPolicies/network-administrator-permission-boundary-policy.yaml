AWSTemplateFormatVersion: "2010-09-09"
Description:
  This is the boundary policy that Network Administrators need to attach
  to all roles they create. The permissions are further restricted by SCPs.
Resources:
  NetworkAdministratorPermissionBoundaryPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description:
        This is the boundary policy that Network Administrators need to
        attach to all roles they create. The permissions are further restricted by SCPs.
      ManagedPolicyName: network-administrator-permission-boundary-policy
      Path: "/"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - 
            Effect: Allow
            Action:
              - autoscaling:Describe*
              - cloudfront:ListDistributions
              - cloudwatch:DeleteAlarms
              - cloudwatch:DescribeAlarms
              - cloudwatch:GetMetricStatistics
              - cloudwatch:PutMetricAlarm
              - directconnect:*
              - ec2:AcceptTransitGatewayVpcAttachment
              - ec2:AcceptVpcEndpointConnections
              - ec2:AcceptVpcPeeringConnection
              - ec2:AllocateAddress
              - ec2:AssignIpv6Addresses
              - ec2:AssignPrivateIpAddresses
              - ec2:AssociateAddress
              - ec2:AssociateDhcpOptions
              - ec2:AssociateRouteTable
              - ec2:AssociateSubnetCidrBlock
              - ec2:AssociateTransitGatewayRouteTable
              - ec2:AssociateVpcCidrBlock
              - ec2:AttachClassicLinkVpc
              - ec2:AttachInternetGateway
              - ec2:AttachNetworkInterface
              - ec2:AttachVpnGateway
              - ec2:AuthorizeSecurityGroupEgress
              - ec2:AuthorizeSecurityGroupIngress
              - ec2:CreateCarrierGateway
              - ec2:CreateCustomerGateway
              - ec2:CreateDefaultSubnet
              - ec2:CreateDefaultVpc
              - ec2:CreateDhcpOptions
              - ec2:CreateEgressOnlyInternetGateway
              - ec2:CreateFlowLogs
              - ec2:CreateInternetGateway
              - ec2:CreateLocalGatewayRoute
              - ec2:CreateLocalGatewayRouteTableVpcAssociation
              - ec2:CreateNatGateway
              - ec2:CreateNetworkAcl
              - ec2:CreateNetworkAclEntry
              - ec2:CreateNetworkInterface
              - ec2:CreateNetworkInterfacePermission
              - ec2:CreatePlacementGroup
              - ec2:CreateRoute
              - ec2:CreateRouteTable
              - ec2:CreateSecurityGroup
              - ec2:CreateSubnet
              - ec2:CreateTags
              - ec2:CreateTransitGateway
              - ec2:CreateTransitGatewayRoute
              - ec2:CreateTransitGatewayRouteTable
              - ec2:CreateTransitGatewayVpcAttachment
              - ec2:CreateVpc
              - ec2:CreateVpcEndpoint
              - ec2:CreateVpcEndpointConnectionNotification
              - ec2:CreateVpcEndpointServiceConfiguration
              - ec2:CreateVpcPeeringConnection
              - ec2:CreateVpnConnection
              - ec2:CreateVpnConnectionRoute
              - ec2:CreateVpnGateway
              - ec2:DeleteCarrierGateway
              - ec2:DeleteCustomerGateway
              - ec2:DeleteDhcpOptions
              - ec2:DeleteEgressOnlyInternetGateway
              - ec2:DeleteFlowLogs
              - ec2:DeleteInternetGateway
              - ec2:DeleteLocalGatewayRoute
              - ec2:DeleteLocalGatewayRouteTableVpcAssociation
              - ec2:DeleteNatGateway
              - ec2:DeleteNetworkAcl
              - ec2:DeleteNetworkAclEntry
              - ec2:DeleteNetworkInterface
              - ec2:DeleteNetworkInterfacePermission
              - ec2:DeletePlacementGroup
              - ec2:DeleteRoute
              - ec2:DeleteRouteTable
              - ec2:DeleteSecurityGroup
              - ec2:DeleteSubnet
              - ec2:DeleteTags
              - ec2:DeleteTransitGateway
              - ec2:DeleteTransitGatewayRoute
              - ec2:DeleteTransitGatewayRouteTable
              - ec2:DeleteTransitGatewayVpcAttachment
              - ec2:DeleteVolume
              - ec2:DeleteVpc
              - ec2:DeleteVpcEndpointConnectionNotifications
              - ec2:DeleteVpcEndpoints
              - ec2:DeleteVpcEndpointServiceConfigurations
              - ec2:DeleteVpcPeeringConnection
              - ec2:DeleteVpnConnection
              - ec2:DeleteVpnConnectionRoute
              - ec2:DeleteVpnGateway
              - ec2:Describe*
              - ec2:DetachClassicLinkVpc
              - ec2:DetachInternetGateway
              - ec2:DetachNetworkInterface
              - ec2:DetachVpnGateway
              - ec2:DisableTransitGatewayRouteTablePropagation
              - ec2:DisableVgwRoutePropagation
              - ec2:DisableVpcClassicLink
              - ec2:DisableVpcClassicLinkDnsSupport
              - ec2:DisassociateAddress
              - ec2:DisassociateRouteTable
              - ec2:DisassociateSubnetCidrBlock
              - ec2:DisassociateTransitGatewayRouteTable
              - ec2:DisassociateVpcCidrBlock
              - ec2:EnableTransitGatewayRouteTablePropagation
              - ec2:EnableVgwRoutePropagation
              - ec2:EnableVpcClassicLink
              - ec2:EnableVpcClassicLinkDnsSupport
              - ec2:ExportTransitGatewayRoutes
              - ec2:GetConsoleScreenshot
              - ec2:GetTransitGatewayAttachmentPropagations
              - ec2:GetTransitGatewayRouteTableAssociations
              - ec2:GetTransitGatewayRouteTablePropagations
              - ec2:ModifyNetworkInterfaceAttribute
              - ec2:ModifySecurityGroupRules
              - ec2:ModifySubnetAttribute
              - ec2:ModifyTransitGateway
              - ec2:ModifyTransitGatewayVpcAttachment
              - ec2:ModifyVpcAttribute
              - ec2:ModifyVpcEndpoint
              - ec2:ModifyVpcEndpointConnectionNotification
              - ec2:ModifyVpcEndpointServiceConfiguration
              - ec2:ModifyVpcEndpointServicePermissions
              - ec2:ModifyVpcPeeringConnectionOptions
              - ec2:ModifyVpcTenancy
              - ec2:MoveAddressToVpc
              - ec2:RejectTransitGatewayVpcAttachment
              - ec2:RejectVpcEndpointConnections
              - ec2:RejectVpcPeeringConnection
              - ec2:ReleaseAddress
              - ec2:ReplaceNetworkAclAssociation
              - ec2:ReplaceNetworkAclEntry
              - ec2:ReplaceRoute
              - ec2:ReplaceRouteTableAssociation
              - ec2:ReplaceTransitGatewayRoute
              - ec2:ResetNetworkInterfaceAttribute
              - ec2:RestoreAddressToClassic
              - ec2:RevokeSecurityGroupEgress
              - ec2:RevokeSecurityGroupIngress
              - ec2:SearchLocalGatewayRoutes
              - ec2:SearchTransitGatewayRoutes
              - ec2:UnassignIpv6Addresses
              - ec2:UnassignPrivateIpAddresses
              - ec2:UnassignPrivateIpAddresses
              - ec2:UpdateSecurityGroupRuleDescriptionsEgress
              - ec2:UpdateSecurityGroupRuleDescriptionsIngress
              - elasticbeanstalk:Describe*
              - elasticbeanstalk:DescribeEnvironments
              - elasticbeanstalk:List*
              - elasticbeanstalk:RequestEnvironmentInfo
              - elasticbeanstalk:RetrieveEnvironmentInfo
              - elasticloadbalancing:*
              - elasticloadbalancing:DescribeLoadBalancers
              - logs:DescribeLogGroups
              - logs:DescribeLogStreams
              - logs:GetLogEvents
              - networkmanager:*
              - route53:*
              - route53domains:*
              - s3:GetBucketLocation
              - s3:GetBucketWebsite
              - s3:ListBucket
              - sns:CreateTopic
              - sns:ListSubscriptionsByTopic
              - sns:ListTopics
            Resource: "*"
          - 
            Effect: Allow
            Action: iam:CreateServiceLinkedRole
            Resource: "*"
            Condition:
              StringEquals:
                iam:AWSServiceName:
                  - networkmanager.amazonaws.com
                  - transitgateway.amazonaws.com
          - 
            Effect: Allow
            Action: apigateway:GET
            Resource: arn:aws:apigateway:*::/domainnames
          - 
            Effect: Allow
            Action:
              - iam:GetRole
              - iam:ListRoles
              - iam:PassRole
            Resource: arn:aws:iam::*:role/flow-logs-*
